# JP2Forge Web Docker Compose Configuration
# Version: 0.1.4 (May 8, 2025)
#
# This docker-compose file defines the services needed to run JP2Forge Web in Docker.
# V0.1.4 improvements:
# - Enhanced HTTP method handling with proper GET/POST restrictions
# - Fixed potential CSRF vulnerabilities by requiring POST method for state-changing actions
# - Improved logout security by enforcing POST method requirement
# - Aligned documentation templates with their Markdown counterparts
#
# V0.1.3 improvements:
# - Fixed context processor import issue with stats_processor
# - Improved logout functionality with custom view handler
# - Removed obsolete version attribute
# - Added proper container healthchecks for all services
# - Improved service dependency chain
# - Enhanced volume management with named volumes
# - Better container naming and environment variable handling
# - Added restart policies for production reliability

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: jp2forge_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-jp2forge}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-jp2forge_password}
      - POSTGRES_DB=${POSTGRES_DB:-jp2forge}
    ports:
      - "5433:5432"  # Map to port 5433 on host to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-jp2forge}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.jp2forge.description=PostgreSQL Database for JP2Forge Web"
      - "com.jp2forge.version=0.1.4"

  # Redis for Celery
  redis:
    image: redis:7.2-alpine
    container_name: jp2forge_redis
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.jp2forge.description=Redis for JP2Forge Web Celery"
      - "com.jp2forge.version=0.1.4"

  # Django Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: jp2forge_web:0.1.4
    container_name: jp2forge_web
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - CREATE_SUPERUSER=true
      - SECURE_DOCKER_ENVIRONMENT=true
    ports:
      - "8000:8000"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.jp2forge.description=JP2Forge Web Application"
      - "com.jp2forge.version=0.1.4"

  # Celery Worker for Background Tasks
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: jp2forge_celery:0.1.4
    container_name: jp2forge_worker
    command: celery -A jp2forge_web worker -l INFO --concurrency=2
    volumes:
      - media_volume:/app/media
    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.jp2forge.description=Celery Worker for JP2Forge Web"
      - "com.jp2forge.version=0.1.4"

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
